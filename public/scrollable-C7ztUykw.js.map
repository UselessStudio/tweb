{"version":3,"file":"scrollable-C7ztUykw.js","sources":["../src/components/scrollable.ts"],"sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport IS_TOUCH_SUPPORTED from '../environment/touchSupport';\nimport {logger, LogTypes} from '../lib/logger';\nimport fastSmoothScroll, {ScrollOptions} from '../helpers/fastSmoothScroll';\nimport useHeavyAnimationCheck from '../hooks/useHeavyAnimationCheck';\nimport cancelEvent from '../helpers/dom/cancelEvent';\nimport {IS_OVERLAY_SCROLL_SUPPORTED} from '../environment/overlayScrollSupport';\nimport {IS_MOBILE_SAFARI, IS_SAFARI} from '../environment/userAgent';\n/*\nvar el = $0;\nvar height = 0;\nvar checkUp = false;\n\ndo {\n  height += el.scrollHeight;\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\nconsole.log(height);\n*/\n\n/*\nArray.from($0.querySelectorAll('.bubble-content')).forEach((_el) => {\n  //_el.style.display = '';\n  //return;\n\n  let el = _el.parentElement;\n  let height = el.scrollHeight;\n  let width = el.scrollWidth;\n  el.style.width = width + 'px';\n  el.style.height = height + 'px';\n  _el.style.display = 'none';\n});\n*/\n\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\nconst scrollsIntersector = new IntersectionObserver((entries) => {\n  for(let entry of entries) {\n    const scrollable = scrollables.get(entry.target as HTMLElement);\n\n    if(entry.isIntersecting) {\n      scrollable.isVisible = true;\n    } else {\n      scrollable.isVisible = false;\n\n      if(!isInDOM(entry.target)) {\n        scrollsIntersector.unobserve(scrollable.container);\n        scrollables.delete(scrollable.container);\n      }\n    }\n  }\n}); */\n\nconst SCROLL_THROTTLE = /* IS_ANDROID ? 200 :  */24;\nconst USE_OWN_SCROLL = !IS_OVERLAY_SCROLL_SUPPORTED;\n\nlet throttleMeasurement: (callback: () => void) => number,\n  cancelMeasurement: (id: number) => void;\nif(USE_OWN_SCROLL) {\n  throttleMeasurement = (callback) => requestAnimationFrame(callback);\n  cancelMeasurement = (id) => cancelAnimationFrame(id);\n} else {\n  throttleMeasurement = (callback) => window.setTimeout(callback, SCROLL_THROTTLE);\n  cancelMeasurement = (id) => window.clearTimeout(id);\n}\n\nexport class ScrollableBase {\n  protected log: ReturnType<typeof logger>;\n\n  public padding: HTMLElement;\n  public splitUp: HTMLElement;\n  public onScrollMeasure: number = 0;\n\n  public lastScrollPosition: number = 0;\n  public lastScrollDirection: number = 0;\n\n  public onAdditionalScroll: () => void;\n  public onScrolledTop: () => void;\n  public onScrolledBottom: () => void;\n\n  public isHeavyAnimationInProgress = false;\n  protected needCheckAfterAnimation = false;\n\n  public checkForTriggers?: () => void;\n\n  public scrollPositionProperty: 'scrollTop' | 'scrollLeft';\n  public scrollSizeProperty: 'scrollHeight' | 'scrollWidth';\n  public clientSizeProperty: 'clientHeight' | 'clientWidth';\n  public offsetSizeProperty: 'offsetHeight' | 'offsetWidth';\n  public clientAxis: 'clientY' | 'clientX';\n\n  protected startMousePosition: number;\n  protected startScrollPosition: number;\n\n  protected thumb: HTMLElement;\n  protected thumbContainer: HTMLElement;\n\n  protected removeHeavyAnimationListener: () => void;\n  protected addedScrollListener: boolean;\n\n  constructor(\n    public el?: HTMLElement,\n    logPrefix = '',\n    public container: HTMLElement = document.createElement('div')\n  ) {\n    this.container.classList.add('scrollable');\n\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\n\n    if(el) {\n      Array.from(el.children).forEach((c) => this.container.append(c));\n\n      el.append(this.container);\n    }\n\n    // this.onScroll();\n  }\n\n  public addScrollListener() {\n    if(this.addedScrollListener) {\n      return;\n    }\n\n    this.addedScrollListener = true;\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\n  }\n\n  public removeScrollListener() {\n    if(!this.addedScrollListener) {\n      return;\n    }\n\n    this.addedScrollListener = false;\n    this.container.removeEventListener('scroll', this.onScroll, {capture: true});\n  }\n\n  public setListeners() {\n    if(this.removeHeavyAnimationListener) {\n      return;\n    }\n\n    window.addEventListener('resize', this.onScroll, {passive: true});\n    this.addScrollListener();\n\n    this.removeHeavyAnimationListener = useHeavyAnimationCheck(() => {\n      this.isHeavyAnimationInProgress = true;\n\n      if(this.onScrollMeasure) {\n        this.cancelMeasure();\n        this.needCheckAfterAnimation = true;\n      }\n    }, () => {\n      this.isHeavyAnimationInProgress = false;\n\n      if(this.needCheckAfterAnimation) {\n        this.onScroll();\n        this.needCheckAfterAnimation = false;\n      }\n    });\n  }\n\n  public removeListeners() {\n    if(!this.removeHeavyAnimationListener) {\n      return;\n    }\n\n    window.removeEventListener('resize', this.onScroll);\n    if(this.thumb) {\n      this.thumb.removeEventListener('mousedown', this.onMouseMove);\n      window.removeEventListener('mousemove', this.onMouseMove);\n      window.removeEventListener('mouseup', this.onMouseUp);\n    }\n    this.removeScrollListener();\n\n    this.removeHeavyAnimationListener();\n    this.removeHeavyAnimationListener = undefined;\n  }\n\n  public destroy() {\n    this.removeListeners();\n    this.onAdditionalScroll = undefined;\n    this.onScrolledTop = undefined;\n    this.onScrolledBottom = undefined;\n  }\n\n  public prepend(...elements: (string | Node)[]) {\n    const prependTo = this.splitUp || this.padding || this.container;\n    this.thumb && /* prependTo === this.container &&  */elements.unshift(this.thumbContainer);\n    prependTo.prepend(...elements);\n    this.onSizeChange();\n  }\n\n  public append(...elements: (string | Node)[]) {\n    (this.splitUp || this.padding || this.container).append(...elements);\n    this.onSizeChange();\n  }\n\n  public scrollIntoViewNew(options: Omit<ScrollOptions, 'container'>) {\n    // return Promise.resolve();\n    // this.removeListeners();\n    return fastSmoothScroll({\n      ...options,\n      container: this.container\n    });/* .finally(() => {\n      this.setListeners();\n    }); */\n  }\n\n  public onScroll = () => {\n    // if(this.debug) {\n    // this.log('onScroll call', this.onScrollMeasure);\n    // }\n\n    // return;\n\n    if(this.isHeavyAnimationInProgress) {\n      this.cancelMeasure();\n      this.needCheckAfterAnimation = true;\n      return;\n    }\n\n    // if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\n    if(this.onScrollMeasure) return;\n    this.onScrollMeasure = throttleMeasurement(() => {\n      this.onScrollMeasure = 0;\n\n      const scrollPosition = this.scrollPosition;\n      this.lastScrollDirection = this.lastScrollPosition === scrollPosition ? 0 : (this.lastScrollPosition < scrollPosition ? 1 : -1); // * 1 - bottom, -1 - top\n      this.lastScrollPosition = scrollPosition;\n\n      this.updateThumb(scrollPosition);\n\n      // lastScrollDirection check is useless here, every callback should decide on its own\n      if(this.onAdditionalScroll/*  && this.lastScrollDirection !== 0 */) {\n        this.onAdditionalScroll();\n      }\n\n      if(this.checkForTriggers) {\n        this.checkForTriggers();\n      }\n    });\n  };\n\n  public updateThumb(scrollPosition = this.scrollPosition) {\n    if(!USE_OWN_SCROLL || !this.thumb) {\n      return;\n    }\n\n    const scrollSize = this.container[this.scrollSizeProperty];\n    const clientSize = this.container[this.clientSizeProperty];\n    const divider = scrollSize / clientSize / 0.75;\n    const thumbSize = Math.max(20, clientSize / divider);\n    const value = scrollPosition / (scrollSize - clientSize) * clientSize;\n    // const b = (scrollPosition + clientSize) / scrollSize;\n    const b = scrollPosition / (scrollSize - clientSize);\n    const maxValue = clientSize - thumbSize;\n    if(clientSize < scrollSize) {\n      this.thumb.style.height = thumbSize + 'px';\n      // this.thumb.style.top = `${Math.min(maxValue, value - thumbSize * b)}px`;\n      this.thumb.style.transform = `translateY(${Math.min(maxValue, value - thumbSize * b)}px)`;\n    } else {\n      this.thumb.style.height = '0px';\n    }\n  }\n\n  public cancelMeasure() {\n    if(this.onScrollMeasure) {\n      cancelMeasurement(this.onScrollMeasure);\n      this.onScrollMeasure = 0;\n    }\n  }\n\n  protected onMouseMove = (e: MouseEvent) => {\n    cancelEvent(e);\n\n    const contentHeight = this.scrollSize;\n    const viewportHeight = this.clientSize;\n    const scrollbarSize = this.thumb.offsetHeight;\n    const maxScrollTop = contentHeight - viewportHeight;\n\n    const maxScrollbarOffset = viewportHeight - scrollbarSize;\n    const deltaY = e[this.clientAxis] - this.startMousePosition;\n    const scrollAmount = (deltaY / maxScrollbarOffset) * maxScrollTop;\n    const newScrollTop = this.startScrollPosition + scrollAmount;\n\n    this.scrollPosition = newScrollTop;\n  };\n\n  protected onMouseDown = (e: MouseEvent) => {\n    cancelEvent(e);\n    this.startMousePosition = e[this.clientAxis];\n    this.startScrollPosition = this.scrollPosition;\n    this.thumb.classList.add('is-focused');\n\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('mouseup', this.onMouseUp, {once: true});\n  };\n\n  protected onMouseUp = (e: MouseEvent) => {\n    window.removeEventListener('mousemove', this.onMouseMove);\n    this.thumb.classList.remove('is-focused');\n  };\n\n  public onSizeChange() {\n    if(USE_OWN_SCROLL && this.thumb) {\n      this.onScroll();\n    }\n  }\n\n  public getDistanceToEnd() {\n    return this.scrollSize - Math.round(this.scrollPosition + this.offsetSize);\n  }\n\n  get isScrolledToEnd() {\n    return this.getDistanceToEnd() <= 1;\n  }\n\n  get scrollPosition() {\n    return this.container[this.scrollPositionProperty];\n  }\n\n  set scrollPosition(value: number) {\n    this.container[this.scrollPositionProperty] = value;\n  }\n\n  get scrollSize() {\n    return this.container[this.scrollSizeProperty];\n  }\n\n  get clientSize() {\n    return this.container[this.clientSizeProperty];\n  }\n\n  get offsetSize() {\n    return this.container[this.offsetSizeProperty];\n  }\n\n  get firstElementChild() {\n    return this.thumb ? this.thumbContainer.nextElementSibling : this.container.firstElementChild;\n  }\n\n  public setScrollPositionSilently(value: number) {\n    this.lastScrollPosition = value;\n    this.ignoreNextScrollEvent();\n\n    this.scrollPosition = value;\n  }\n\n  public ignoreNextScrollEvent() {\n    if(this.removeHeavyAnimationListener) {\n      this.removeScrollListener();\n      this.container.addEventListener('scroll', (e) => {\n        cancelEvent(e);\n        this.addScrollListener();\n      }, {capture: true, passive: false, once: true});\n    }\n  }\n\n  public replaceChildren(...args: (string | Node)[]) {\n    this.thumb && args.unshift(this.thumbContainer);\n    this.container.replaceChildren(...args);\n  }\n}\n\nexport type SliceSides = 'top' | 'bottom';\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\n\nexport default class Scrollable extends ScrollableBase {\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\n\n  constructor(\n    el?: HTMLElement,\n    logPrefix = '',\n    public onScrollOffset = 300,\n    withPaddingContainer?: boolean,\n    container?: HTMLElement\n  ) {\n    super(el, logPrefix, container);\n\n    // withPaddingContainer = true;\n    // if(withPaddingContainer) {\n    //   this.padding = document.createElement('div');\n    //   this.padding.classList.add('scrollable-padding');\n    //   this.padding.append(...Array.from(this.container.children));\n    //   this.container.append(this.padding);\n    // }\n\n    this.scrollPositionProperty = 'scrollTop';\n    this.scrollSizeProperty = 'scrollHeight';\n    this.clientSizeProperty = 'clientHeight';\n    this.offsetSizeProperty = 'offsetHeight';\n    this.clientAxis = 'clientY';\n\n    if(USE_OWN_SCROLL) {\n      this.thumbContainer = document.createElement('div');\n      this.thumbContainer.classList.add('scrollable-thumb-container');\n      this.thumb = document.createElement('div');\n      this.thumb.classList.add('scrollable-thumb');\n      this.thumbContainer.append(this.thumb);\n      this.container.prepend(this.thumbContainer);\n\n      this.thumb.addEventListener('mousedown', this.onMouseDown);\n    }\n\n    this.container.classList.add('scrollable-y');\n    if(IS_SAFARI && !IS_MOBILE_SAFARI) {\n      this.container.classList.add('no-scrollbar');\n    }\n    this.setListeners();\n  }\n\n  public attachBorderListeners(setClassOn = this.container) {\n    const cb = this.onAdditionalScroll;\n    this.onAdditionalScroll = () => {\n      cb?.();\n      setClassOn.classList.toggle('scrolled-top', !this.scrollPosition);\n      setClassOn.classList.toggle('scrolled-bottom', this.isScrolledToEnd);\n    };\n\n    setClassOn.classList.add('scrolled-top', 'scrolled-bottom', 'scrollable-y-bordered');\n  }\n\n  public setVirtualContainer(el?: HTMLElement) {\n    this.splitUp = el;\n    this.log('setVirtualContainer:', el, this);\n  }\n\n  public checkForTriggers = () => {\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\n\n    if(this.isHeavyAnimationInProgress) {\n      this.onScroll();\n      return;\n    }\n\n    const {scrollSize, scrollPosition, clientSize} = this;\n    if(!scrollSize) { // незачем вызывать триггеры если блок пустой или не виден\n      return;\n    }\n\n    const maxScrollPosition = scrollSize - clientSize;\n\n    // this.log('checkForTriggers:', scrollTop, maxScrollTop);\n\n    if(this.onScrolledTop && scrollPosition <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\n      this.onScrolledTop();\n    }\n\n    if(this.onScrolledBottom && (maxScrollPosition - scrollPosition) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\n      this.onScrolledBottom();\n    }\n  };\n}\n\nexport class ScrollableX extends ScrollableBase {\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\n    super(el, logPrefix, container);\n\n    this.container.classList.add('scrollable-x');\n\n    if(!IS_TOUCH_SUPPORTED) {\n      const scrollHorizontally = (e: WheelEvent) => {\n        e.stopPropagation();\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\n          this.container.scrollLeft += e.deltaY / 4;\n          cancelEvent(e);\n        }\n      };\n\n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\n    }\n\n    this.scrollPositionProperty = 'scrollLeft';\n    this.scrollSizeProperty = 'scrollWidth';\n    this.clientSizeProperty = 'clientWidth';\n    this.offsetSizeProperty = 'offsetWidth';\n  }\n}\n"],"names":["SCROLL_THROTTLE","USE_OWN_SCROLL","IS_OVERLAY_SCROLL_SUPPORTED","throttleMeasurement","cancelMeasurement","callback","id","ScrollableBase","el","logPrefix","container","scrollPosition","cancelEvent","contentHeight","viewportHeight","scrollbarSize","maxScrollTop","maxScrollbarOffset","scrollAmount","newScrollTop","logger","LogTypes","c","useHeavyAnimationCheck","elements","prependTo","options","fastSmoothScroll","scrollSize","clientSize","divider","thumbSize","value","b","maxValue","e","args","Scrollable","onScrollOffset","withPaddingContainer","maxScrollPosition","IS_SAFARI","IS_MOBILE_SAFARI","setClassOn","cb","ScrollableX","splitCount","IS_TOUCH_SUPPORTED","scrollHorizontally"],"mappings":"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"}